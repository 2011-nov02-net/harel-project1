# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

pool:
  vmImage: 'ubuntu-latest'

variables:
- name: buildConfiguration
  value: 'Release'
- name: BuildParameters.RestoreBuildProjects
  value: '**/*.csproj'
- name: BuildParameters.TestProjects
  value: '**/*Tests/*.csproj'
trigger:
  branches:
    include:
    - master
    - main
  paths:
    include:
    - /
  batch: True
name: $(date:yyyyMMdd)$(rev:.r)
resources:
  repositories:
  - repository: self
    type: git
    ref: master
jobs:
- job: Phase_1
  displayName: Agent job 1
  timeoutInMinutes: 0
  pool:
    vmImage: vs2017-win2016
  steps:
  - checkout: self
  - task: UseDotNet@2
    displayName: Use .NET Core sdk 5.x
    inputs:
      version: 5.x
      includePreviewVersions: true
  - task: SonarCloudPrepare@1
    displayName: Prepare analysis on SonarCloud
    continueOnError: True
    inputs:
      SonarCloud: 'fd9fc458-5f3f-449a-96e5-852e3c8115e4'
      organization: '2011-nov02-net'
      scannerMode: 'MSBuild'
      projectKey: '2011-nov02-net_harel-project1'
      projectName: 'harel-project1'
      extraProperties: 'sonar.exclusions=**/lib/**'
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: $(BuildParameters.RestoreBuildProjects)
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: 'build'
      projects: '$(BuildParameters.RestoreBuildProjects)'
      arguments: '--configuration $(BuildConfiguration)'
      #workingDirectory: 'Store.WebApp'
  
  - task: SonarCloudPublish@1
    displayName: Publish Quality Gate Result
    continueOnError: True
  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      projects: $(BuildParameters.TestProjects)
      arguments: --configuration $(BuildConfiguration)
  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      command: publish
      publishWebProjects: True
      arguments: --configuration $(BuildConfiguration) --output "$(build.artifactstagingdirectory)"
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
  - task: AzureRmWebAppDeployment@4
    displayName: 'Azure App Service Deploy: hellopiplines-windows-harel'
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'Azure subscription 1(3385faf4-311a-4eab-851a-775463f9a467)'
      appType: 'webApp'
      WebAppName: 'harel-project1'
      packageForLinux: '$(build.artifactstagingdirectory)/**/*.zip'
...